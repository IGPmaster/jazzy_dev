import{m as t}from"../nitro/nitro.mjs";import{v as e}from"./server.mjs";import{u as r}from"./asyncData-46382b35.mjs";import{u as s,c as o,r as n}from"../routes/renderer.mjs";function useFetch(a,i,u){const[l={},c]="string"==typeof i?[{},i]:[i,u],f=l.key||t([c,s(l.baseURL),"string"==typeof a?a:"",s(l.params||l.query)]);if(!f||"string"!=typeof f)throw new TypeError("[nuxt] [useFetch] key must be a string: "+f);if(!a)throw new Error("[nuxt] [useFetch] request is missing.");const h=f===c?"$f"+f:f,m=o((()=>{let t=a;return"function"==typeof t&&(t=t()),s(t)}));if(!l.baseURL&&"string"==typeof m.value&&m.value.startsWith("//"))throw new Error('[nuxt] [useFetch] the request URL must not start with "//".');const{server:p,lazy:v,default:y,transform:d,pick:g,watch:b,immediate:w,...$}=l,x=n({...$,cache:"boolean"==typeof l.cache?void 0:l.cache}),F={server:p,lazy:v,default:y,transform:d,pick:g,immediate:w,watch:!1===b?[]:[x,m,...b||[]]};let j;return r(h,(()=>{var t;null==(t=null==j?void 0:j.abort)||t.call(j),j="undefined"!=typeof AbortController?new AbortController:{};const r="string"==typeof m.value&&m.value.startsWith("/");let s=l.$fetch||globalThis.$fetch;return!l.$fetch&&r&&(s=function(){var t;const r=null==(t=e().ssrContext)?void 0:t.event;return(null==r?void 0:r.$fetch)||globalThis.$fetch}()),s(m.value,{signal:j.signal,...x})}),F)}export{useFetch as u};
//# sourceMappingURL=fetch-663c3848.mjs.map
